/**
 * Global Styles and CSS Reset
 * 
 * This file contains global styles that apply to the entire project.
 * It includes CSS reset, base typography, and the responsive container system.
 * 
 * Key Features:
 * - CSS reset for consistent cross-browser rendering
 * - Global typography settings
 * - Responsive container system
 * - Utility classes and global rules
 * 
 * @author Eyad Sharkawy
 * @version 1.0.0
 */

// Import variables for use in global styles
@use "variables" as *;

// =============================================================================
// CSS RESET & BASE STYLES
// =============================================================================

/**
 * CSS Reset
 * 
 * Removes default browser styling and ensures consistent rendering
 * across different browsers and devices.
 * 
 * Note: Using box-sizing: border-box for more predictable layouts.
 */
*,
*::before,
*::after {
  box-sizing: inherit;
  padding: 0;
  margin: 0;
}

/**
 * Base HTML and Body Styles
 * 
 * Sets up the foundation for the entire document:
 * - Box-sizing model for predictable layouts
 * - Smooth scrolling for better UX
 * - Global font family inheritance
 */
html,
body {
  box-sizing: border-box;
  scroll-behavior: smooth;
  font-family: $main-font;
}

/**
 * List Reset
 * 
 * Removes default list styling (bullets, margins, padding)
 * for consistent list appearance across components.
 */
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

// =============================================================================
// RESPONSIVE CONTAINER SYSTEM
// =============================================================================

/**
 * Container Class
 * 
 * Provides a responsive, centered container system with consistent padding
 * and maximum widths for different screen sizes.
 * 
 * Features:
 * - Responsive max-widths using CSS media queries
 * - Consistent horizontal padding (15px on each side)
 * - Centered layout with auto margins
 * - Mobile-first responsive design
 * 
 * Breakpoint System:
 * - Mobile: 0px - 575px (no max-width, full width)
 * - Small: 576px+ (max-width: 540px)
 * - Medium: 768px+ (max-width: 720px)
 * - Large: 992px+ (max-width: 960px)
 * - Extra Large: 1200px+ (max-width: 1140px)
 * 
 * Usage:
 * <div class="container">
 *   <!-- Your content here -->
 * </div>
 */
.container {
  padding-left: 15px;
  padding-right: 15px;
  margin-left: auto;
  margin-right: auto;

  // =============================================================================
  // RESPONSIVE BREAKPOINTS
  // =============================================================================

  /**
   * Small devices (landscape phones, 576px and up)
   * Provides better readability on small screens while maintaining
   * comfortable reading width.
   */
  @media (min-width: 576px) {
    max-width: 540px;
  }

  /**
   * Medium devices (tablets, 768px and up)
   * Optimized for tablet viewing with increased content width.
   */
  @media (min-width: 768px) {
    max-width: 720px;
  }

  /**
   * Large devices (desktops, 992px and up)
   * Standard desktop layout with comfortable reading width.
   */
  @media (min-width: 992px) {
    max-width: 960px;
  }

  /**
   * Extra large devices (large desktops, 1200px and up)
   * Maximum width for very large screens, prevents content
   * from becoming too wide and hard to read.
   */
  @media (min-width: 1200px) {
    max-width: 1140px;
  }
}

// =============================================================================
// GLOBAL UTILITY CLASSES
// =============================================================================

/**
 * Future Utility Classes
 * 
 * These can be added here for common utility patterns:
 * 
 * .text-center { text-align: center; }
 * .text-left { text-align: left; }
 * .text-right { text-align: right; }
 * 
 * .d-none { display: none; }
 * .d-block { display: block; }
 * .d-flex { display: flex; }
 * .d-grid { display: grid; }
 * 
 * .w-100 { width: 100%; }
 * .h-100 { height: 100%; }
 * 
 * .position-relative { position: relative; }
 * .position-absolute { position: absolute; }
 * .position-fixed { position: fixed; }
 */

/**
 * Accessibility Improvements
 * 
 * Consider adding these global accessibility enhancements:
 * 
 * .sr-only {
 *   position: absolute;
 *   width: 1px;
 *   height: 1px;
 *   padding: 0;
 *   margin: -1px;
 *   overflow: hidden;
 *   clip: rect(0, 0, 0, 0);
 *   white-space: nowrap;
 *   border: 0;
 * }
 * 
 * .focus-visible:focus {
 *   outline: 2px solid $main-color;
 *   outline-offset: 2px;
 * }
 */